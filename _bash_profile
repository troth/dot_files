# -*- mode: sh -*-
# .bash_profile

#
# $Id: .bash_profile,v 1.1 2004/05/03 15:39:59 roth Exp $
#
# Ted's .bash_profile
#

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
	. ~/.bashrc
fi

if [ -e ~/.xenvironment ]; then
	. ~/.xenvironment
fi

# This makes it easier to deal with schroot which shares the $HOME dir
# in chroots.
OS_REL=$(lsb_release -irs | tr '\n' ' ' | tr ' ' '-' | sed -e 's/-$//')
export OS_REL

unset PATH

PATH=/usr/local/bin:/usr/bin:/bin

# Add things that are usually only in root's path.
PATH=$PATH:/usr/local/sbin
PATH=$PATH:/usr/sbin
PATH=$PATH:/sbin

# Add all my home paths one at a time so that they are easy to comment
# out.
PATH=$PATH:$HOME/bin
if [ -d $HOME/local/${OS_REL}/bin ]; then
    PATH=$PATH:$HOME/local/${OS_REL}/bin
fi
if [ -d $HOME/local/bin ]; then
    PATH=$PATH:$HOME/local/bin
fi
if [ -d $HOME/local/${OS_REL}/emacs/bin ]; then
    PATH=$HOME/local/${OS_REL}/emacs/bin:$PATH
fi

export PATH

MANPATH=$MANPATH:$HOME/man
MANPATH=$MANPATH:$HOME/local/${OS_REL}/man
#MANPATH=$MANPATH:$HOME/local/man

export MANPATH

if [ -d $HOME/local/${OS_REL}/lib ]; then
    MY_LD_LIB_PATH=$HOME/local/${OS_REL}/lib
fi

export LD_LIBRARY_PATH=$MY_LD_LIB_PATH

export PYTHONPATH=$HOME/bin/python

export EDITOR=vim

export LC_COLLATE=C

export CSCOPE_EDITOR="$HOME/bin/emacsclient-nowait"

_BLK_ ()
{
    printf -- "\033[0m"
}
_RED_ ()
{
    printf -- "\033[31m"
}
_GRN_ ()
{
    printf -- "\033[32m"
}
_BLU_ ()
{
    printf -- "\033[34m"
}
_CYN_ ()
{
    printf -- "\033[36m"
}

__env_ps1 ()
{
    if [ -n "${ENV_PROMPT}" ]
    then
        printf "$(_RED_)[${ENV_PROMPT}]$(_BLK_) "
    fi
}

PS1='\n$(_GRN_)### $(__env_ps1)$(_BLU_)[\T \D{%P}]$(_CYN_)[${OS_REL}]$(__git_ps1 "$(_RED_) Branch: %s")\n$(_GRN_)### [\u@\h:\w]$(_BLK_)\n>--> \$ '

export PS1

# Load a local profile if it exists
if [ -f ~/.bash_profile_local ]; then
	. ~/.bash_profile_local
fi

# Set up ccache if it is installed.
LIB_DIRS=(
    /usr/lib
    /usr/lib64
    /usr/lib32
)

for LIB in ${LIB_DIRS[@]}
do
    if [ -d ${LIB}/ccache ] && [ -x ${LIB}/ccache/gcc ]
    then
        PATH=${LIB}/ccache:$PATH
        export PATH
        break
    fi
done

#
# Setup common downloads and sstate directories to be shared by all Yocto/OE
# builds.
#

mkdir -p "$HOME/Yocto-Downloads"
export DL_DIR="$HOME/Yocto-Downloads"

mkdir -p "$HOME/Yocto-SState"
export SSTATE_DIR="$HOME/Yocto-SState"

# Variables we need bitbake to get from environment.
TROTH_EXTRAWHITE=(
    DL_DIR
    SSTATE_DIR
)

export BB_ENV_EXTRAWHITE="${BB_ENV_EXTRAWHITE} ${TROTH_EXTRAWHITE[@]}"

${ENV_YOCTO_INIT}
